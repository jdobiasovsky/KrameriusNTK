group viewinfo;

/* whole viewinfo tempalte */
viewinfo(data, globalActions) ::=<<
{
        pdfMaxRange:$data.pdfMaxRange$,
        previewStreamGenerated:$data.previewStreamGenerated$,
        deepZoomGenerated:$data.deepZoomCacheGenerated$,
        deepZoomCofigurationEnabled:$data.deepZoomCofigurationEnabled$,
        
        mimeType:'$data.mimeType$', 
        hasAlto:$data.hasAlto$,
        pid:"$data.pid$",
        model:"$data.model$",
        
        displayableContent:$data.displayableContent$,
        
        imgfull:$data.imgfull$,
    
        donator:'$data.donator$',
        
        $if(data.alto)$
        alto:$alto(altoData=data.alto)$,                
        $endif$
        
        $if(data.canhandlecommongroup)$
        canhandlecommongroup:$data.canhandlecommongroup$,
        $endif$
        pathsOfPids:[$data.pathsOfPids:{p|$path(path=p)$};separator=","$],
        imageServerConfigured:'$data.imageServerConfigured$', 
        $rights(securedActions=data.securedActions, globalActions=data.globalActions);separator=","$,                
        $supportfunctions()$
}
>>

_map(m) ::=<<
    {$m.keys:{key |$key$:$m.(key)$};separator=","$ }
>>

alto(altoData) ::=<<
$altoData$
>>
            

/* rights */
rights(securedActions, globalActions) ::=<<

    rights: 
    { 
        $securedActions.keys:{secaction |   $action(action=secaction,mappedPaths=securedActions.(secaction))$  };separator=",\n"$ 
        $if(globalActions)$
        ,
        $globalActions:{secaction | $action(action=secaction,mappedPaths=securedActions.(secaction))$  };separator=",\n"$
        $endif$
    }
>>




/* action's map */
action(action, mappedPaths) ::=<<
    "$action$": { 
        $mappedPaths:{mappedPath |  $mappedPath(mappedPath=mappedPath)$ };separator=","$
    }
>>

mappedPath(mappedPath)::=<<
        $mappedPath.mappedPathElements:{pelm|"$pelm.pid$":$pelm.flag$  };separator=","$
>>

path(path) ::=<<
    [$path.pathFromLeafToRoot:{pid|"$pid$" };separator=","$]
>>



/* some support functions */
supportfunctions() ::=<<
        isContentPDF:function() {return viewerOptions.mimeType=='application/pdf'},
        isContentDJVU:function() {return viewerOptions.mimeType.indexOf('djvu')> 0 }
>>
